{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\Shubhangi\\\\PROJECTS\\\\chat\\\\src\\\\App.js\";\nimport React from 'react';\nimport Chat from 'react-simple-chatbot';\nimport './App.css';\nimport { Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.previousStep = null;\n  }\n  componentWillMount() {\n    const steps = [{\n      id: 'Greet',\n      message: 'Hello, Welcome to our shop',\n      trigger: 'Done'\n    }, {\n      id: 'Done',\n      message: 'Please enter your name!',\n      trigger: 'waiting1'\n    }, {\n      id: 'waiting1',\n      user: true,\n      trigger: 'Name'\n    }, {\n      id: 'Name',\n      message: 'Hi {previousValue}, Please select your issue',\n      trigger: 'issues'\n    }, {\n      id: 'issues',\n      options: [{\n        value: 'React',\n        label: 'React',\n        trigger: 'React'\n      }, {\n        value: 'Angular',\n        label: 'Angular',\n        trigger: 'Angular'\n      }]\n    }, {\n      id: 'React',\n      message: 'Thanks for letting your React issue, Our team will resolve your issue ASAP',\n      end: true\n    }, {\n      id: 'Angular',\n      message: 'Thanks for letting your Angular issue, Our team will resolve your issue ASAP',\n      end: true\n    }];\n    const modifiedSteps = steps.map(step => {\n      const modifiedStep = {\n        ...step\n      };\n      if (modifiedStep.user) {\n        modifiedStep.trigger = this.previousStep;\n      }\n      this.previousStep = modifiedStep.id;\n      return modifiedStep;\n    });\n    this.steps = modifiedSteps;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      floated: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        steps: this.steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Chat","Segment","jsxDEV","_jsxDEV","App","Component","constructor","props","previousStep","componentWillMount","steps","id","message","trigger","user","options","value","label","end","modifiedSteps","map","step","modifiedStep","render","floated","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/KIIT/Desktop/Shubhangi/PROJECTS/chat/src/App.js"],"sourcesContent":["import React from 'react';\nimport Chat from 'react-simple-chatbot';\nimport './App.css';\nimport { Segment } from 'semantic-ui-react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.previousStep = null;\n  }\n\n  componentWillMount() {\n    const steps = [\n      {\n        id: 'Greet',\n        message: 'Hello, Welcome to our shop',\n        trigger: 'Done',\n      },\n      {\n        id: 'Done',\n        message: 'Please enter your name!',\n        trigger: 'waiting1',\n      },\n      {\n        id: 'waiting1',\n        user: true,\n        trigger: 'Name',\n      },\n      {\n        id: 'Name',\n        message: 'Hi {previousValue}, Please select your issue',\n        trigger: 'issues',\n      },\n      {\n        id: 'issues',\n        options: [\n          {\n            value: 'React',\n            label: 'React',\n            trigger: 'React',\n          },\n          {\n            value: 'Angular',\n            label: 'Angular',\n            trigger: 'Angular',\n          },\n        ],\n      },\n      {\n        id: 'React',\n        message:\n          'Thanks for letting your React issue, Our team will resolve your issue ASAP',\n        end: true,\n      },\n      {\n        id: 'Angular',\n        message:\n          'Thanks for letting your Angular issue, Our team will resolve your issue ASAP',\n        end: true,\n      },\n    ];\n\n    const modifiedSteps = steps.map((step) => {\n      const modifiedStep = { ...step };\n      if (modifiedStep.user) {\n        modifiedStep.trigger = this.previousStep;\n      }\n      this.previousStep = modifiedStep.id;\n      return modifiedStep;\n    });\n\n    this.steps = modifiedSteps;\n  }\n\n  render() {\n    return (\n      <Segment floated=\"center\">\n        <Chat steps={this.steps} />\n      </Segment>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,SAASL,KAAK,CAACM,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,MAAMC,KAAK,GAAG,CACZ;MACEC,EAAE,EAAE,OAAO;MACXC,OAAO,EAAE,4BAA4B;MACrCC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,EAAE,EAAE,MAAM;MACVC,OAAO,EAAE,yBAAyB;MAClCC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,EAAE,EAAE,UAAU;MACdG,IAAI,EAAE,IAAI;MACVD,OAAO,EAAE;IACX,CAAC,EACD;MACEF,EAAE,EAAE,MAAM;MACVC,OAAO,EAAE,8CAA8C;MACvDC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,EAAE,EAAE,QAAQ;MACZI,OAAO,EAAE,CACP;QACEC,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE,OAAO;QACdJ,OAAO,EAAE;MACX,CAAC,EACD;QACEG,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,SAAS;QAChBJ,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,EACD;MACEF,EAAE,EAAE,OAAO;MACXC,OAAO,EACL,4EAA4E;MAC9EM,GAAG,EAAE;IACP,CAAC,EACD;MACEP,EAAE,EAAE,SAAS;MACbC,OAAO,EACL,8EAA8E;MAChFM,GAAG,EAAE;IACP,CAAC,CACF;IAED,MAAMC,aAAa,GAAGT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;MACxC,MAAMC,YAAY,GAAG;QAAE,GAAGD;MAAK,CAAC;MAChC,IAAIC,YAAY,CAACR,IAAI,EAAE;QACrBQ,YAAY,CAACT,OAAO,GAAG,IAAI,CAACL,YAAY;MAC1C;MACA,IAAI,CAACA,YAAY,GAAGc,YAAY,CAACX,EAAE;MACnC,OAAOW,YAAY;IACrB,CAAC,CAAC;IAEF,IAAI,CAACZ,KAAK,GAAGS,aAAa;EAC5B;EAEAI,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA,CAACF,OAAO;MAACuB,OAAO,EAAC,QAAQ;MAAAC,QAAA,eACvBtB,OAAA,CAACH,IAAI;QAACU,KAAK,EAAE,IAAI,CAACA;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEd;AACF;AAEA,eAAezB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}